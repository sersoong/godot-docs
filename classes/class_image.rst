.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Image.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Image:

Image
=====

**Inherits:** :ref:`Resource<class_resource>` **<** :ref:`Reference<class_reference>` **<** :ref:`Object<class_object>`

**Category:** Core

Brief Description
-----------------

Image datatype.

Member Functions
----------------

+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`blend_rect<class_Image_blend_rect>` **(** :ref:`Image<class_image>` src, :ref:`Rect2<class_rect2>` src_rect, :ref:`Vector2<class_vector2>` dst **)**                                                                                     |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`blend_rect_mask<class_Image_blend_rect_mask>` **(** :ref:`Image<class_image>` src, :ref:`Image<class_image>` mask, :ref:`Rect2<class_rect2>` src_rect, :ref:`Vector2<class_vector2>` dst **)**                                           |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`blit_rect<class_Image_blit_rect>` **(** :ref:`Image<class_image>` src, :ref:`Rect2<class_rect2>` src_rect, :ref:`Vector2<class_vector2>` dst **)**                                                                                       |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`blit_rect_mask<class_Image_blit_rect_mask>` **(** :ref:`Image<class_image>` src, :ref:`Image<class_image>` mask, :ref:`Rect2<class_rect2>` src_rect, :ref:`Vector2<class_vector2>` dst **)**                                             |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`clear_mipmaps<class_Image_clear_mipmaps>` **(** **)**                                                                                                                                                                                    |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                      | :ref:`compress<class_Image_compress>` **(** :ref:`int<class_int>` mode, :ref:`int<class_int>` source, :ref:`float<class_float>` lossy_quality **)**                                                                                            |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`convert<class_Image_convert>` **(** :ref:`int<class_int>` format **)**                                                                                                                                                                   |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`copy_from<class_Image_copy_from>` **(** :ref:`Image<class_image>` src **)**                                                                                                                                                              |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`create<class_Image_create>` **(** :ref:`int<class_int>` width, :ref:`int<class_int>` height, :ref:`bool<class_bool>` use_mipmaps, :ref:`int<class_int>` format **)**                                                                     |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`create_from_data<class_Image_create_from_data>` **(** :ref:`int<class_int>` width, :ref:`int<class_int>` height, :ref:`bool<class_bool>` use_mipmaps, :ref:`int<class_int>` format, :ref:`PoolByteArray<class_poolbytearray>` data **)** |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`crop<class_Image_crop>` **(** :ref:`int<class_int>` width, :ref:`int<class_int>` height **)**                                                                                                                                            |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                      | :ref:`decompress<class_Image_decompress>` **(** **)**                                                                                                                                                                                          |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                      | :ref:`detect_alpha<class_Image_detect_alpha>` **(** **)** const                                                                                                                                                                                |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`expand_x2_hq2x<class_Image_expand_x2_hq2x>` **(** **)**                                                                                                                                                                                  |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`fill<class_Image_fill>` **(** :ref:`Color<class_color>` color **)**                                                                                                                                                                      |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`fix_alpha_edges<class_Image_fix_alpha_edges>` **(** **)**                                                                                                                                                                                |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`flip_x<class_Image_flip_x>` **(** **)**                                                                                                                                                                                                  |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`flip_y<class_Image_flip_y>` **(** **)**                                                                                                                                                                                                  |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                      | :ref:`generate_mipmaps<class_Image_generate_mipmaps>` **(** **)**                                                                                                                                                                              |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolByteArray<class_poolbytearray>`  | :ref:`get_data<class_Image_get_data>` **(** **)** const                                                                                                                                                                                        |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                      | :ref:`get_format<class_Image_get_format>` **(** **)** const                                                                                                                                                                                    |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                      | :ref:`get_height<class_Image_get_height>` **(** **)** const                                                                                                                                                                                    |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                      | :ref:`get_mipmap_offset<class_Image_get_mipmap_offset>` **(** :ref:`int<class_int>` mipmap **)** const                                                                                                                                         |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Color<class_color>`                  | :ref:`get_pixel<class_Image_get_pixel>` **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)** const                                                                                                                                     |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Image<class_image>`                  | :ref:`get_rect<class_Image_get_rect>` **(** :ref:`Rect2<class_rect2>` rect **)** const                                                                                                                                                         |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_vector2>`              | :ref:`get_size<class_Image_get_size>` **(** **)** const                                                                                                                                                                                        |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_rect2>`                  | :ref:`get_used_rect<class_Image_get_used_rect>` **(** **)** const                                                                                                                                                                              |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                      | :ref:`get_width<class_Image_get_width>` **(** **)** const                                                                                                                                                                                      |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`has_mipmaps<class_Image_has_mipmaps>` **(** **)** const                                                                                                                                                                                  |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`is_compressed<class_Image_is_compressed>` **(** **)** const                                                                                                                                                                              |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`is_empty<class_Image_is_empty>` **(** **)** const                                                                                                                                                                                        |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`is_invisible<class_Image_is_invisible>` **(** **)** const                                                                                                                                                                                |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                      | :ref:`load<class_Image_load>` **(** :ref:`String<class_string>` path **)**                                                                                                                                                                     |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`lock<class_Image_lock>` **(** **)**                                                                                                                                                                                                      |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`normalmap_to_xy<class_Image_normalmap_to_xy>` **(** **)**                                                                                                                                                                                |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`premultiply_alpha<class_Image_premultiply_alpha>` **(** **)**                                                                                                                                                                            |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`resize<class_Image_resize>` **(** :ref:`int<class_int>` width, :ref:`int<class_int>` height, :ref:`int<class_int>` interpolation=1 **)**                                                                                                 |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`resize_to_po2<class_Image_resize_to_po2>` **(** :ref:`bool<class_bool>` square=false **)**                                                                                                                                               |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                      | :ref:`save_png<class_Image_save_png>` **(** :ref:`String<class_string>` path **)** const                                                                                                                                                       |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`set_pixel<class_Image_set_pixel>` **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y, :ref:`Color<class_color>` color **)**                                                                                                          |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`shrink_x2<class_Image_shrink_x2>` **(** **)**                                                                                                                                                                                            |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`srgb_to_linear<class_Image_srgb_to_linear>` **(** **)**                                                                                                                                                                                  |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`unlock<class_Image_unlock>` **(** **)**                                                                                                                                                                                                  |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Member Variables
----------------

  .. _class_Image_data:

- :ref:`Dictionary<class_dictionary>` **data** - Holds all of the image's color data in a given format. See ``FORMAT\_\*`` constants.


Numeric Constants
-----------------

- **FORMAT_L8** = **0**
- **FORMAT_LA8** = **1**
- **FORMAT_R8** = **2**
- **FORMAT_RG8** = **3**
- **FORMAT_RGB8** = **4**
- **FORMAT_RGBA8** = **5**
- **FORMAT_RGBA4444** = **6**
- **FORMAT_RGBA5551** = **7**
- **FORMAT_RF** = **8**
- **FORMAT_RGF** = **9**
- **FORMAT_RGBF** = **10**
- **FORMAT_RGBAF** = **11**
- **FORMAT_RH** = **12**
- **FORMAT_RGH** = **13**
- **FORMAT_RGBH** = **14**
- **FORMAT_RGBAH** = **15**
- **FORMAT_RGBE9995** = **16**
- **FORMAT_DXT1** = **17**
- **FORMAT_DXT3** = **18**
- **FORMAT_DXT5** = **19**
- **FORMAT_RGTC_R** = **20**
- **FORMAT_RGTC_RG** = **21**
- **FORMAT_BPTC_RGBA** = **22**
- **FORMAT_BPTC_RGBF** = **23**
- **FORMAT_BPTC_RGBFU** = **24**
- **FORMAT_PVRTC2** = **25**
- **FORMAT_PVRTC2A** = **26**
- **FORMAT_PVRTC4** = **27**
- **FORMAT_PVRTC4A** = **28**
- **FORMAT_ETC** = **29**
- **FORMAT_ETC2_R11** = **30**
- **FORMAT_ETC2_R11S** = **31**
- **FORMAT_ETC2_RG11** = **32**
- **FORMAT_ETC2_RG11S** = **33**
- **FORMAT_ETC2_RGB8** = **34**
- **FORMAT_ETC2_RGBA8** = **35**
- **FORMAT_ETC2_RGB8A1** = **36**
- **FORMAT_MAX** = **37**
- **INTERPOLATE_NEAREST** = **0**
- **INTERPOLATE_BILINEAR** = **1**
- **INTERPOLATE_CUBIC** = **2**
- **ALPHA_NONE** = **0**
- **ALPHA_BIT** = **1**
- **ALPHA_BLEND** = **2**
- **COMPRESS_S3TC** = **0**
- **COMPRESS_PVRTC2** = **1**
- **COMPRESS_PVRTC4** = **2**
- **COMPRESS_ETC** = **3**
- **COMPRESS_ETC2** = **4**
- **COMPRESS_SOURCE_GENERIC** = **0**
- **COMPRESS_SOURCE_SRGB** = **1**
- **COMPRESS_SOURCE_NORMAL** = **2**

Description
-----------

Native image datatype. Contains image data, which can be converted to a :ref:`Texture<class_texture>`, and several functions to interact with it. The maximum width and height for an ``Image`` is 16384 pixels.

Member Function Description
---------------------------

.. _class_Image_blend_rect:

- void **blend_rect** **(** :ref:`Image<class_image>` src, :ref:`Rect2<class_rect2>` src_rect, :ref:`Vector2<class_vector2>` dst **)**

Alpha-blends ``src_rect`` from ``src`` image to this image at coordinates ``dest``.

.. _class_Image_blend_rect_mask:

- void **blend_rect_mask** **(** :ref:`Image<class_image>` src, :ref:`Image<class_image>` mask, :ref:`Rect2<class_rect2>` src_rect, :ref:`Vector2<class_vector2>` dst **)**

Alpha-blends ``src_rect`` from ``src`` image to this image using ``mask`` image at coordinates ``dst``. Alpha channels are required for both ``src`` and ``mask``. ``dst`` pixels and ``src`` pixels will blend if the corresponding mask pixel's alpha value is not 0. ``src`` image and ``mask`` image **must** have the same size (width and height) but they can have different formats.

.. _class_Image_blit_rect:

- void **blit_rect** **(** :ref:`Image<class_image>` src, :ref:`Rect2<class_rect2>` src_rect, :ref:`Vector2<class_vector2>` dst **)**

Copies ``src_rect`` from ``src`` image to this image at coordinates ``dst``.

.. _class_Image_blit_rect_mask:

- void **blit_rect_mask** **(** :ref:`Image<class_image>` src, :ref:`Image<class_image>` mask, :ref:`Rect2<class_rect2>` src_rect, :ref:`Vector2<class_vector2>` dst **)**

Blits ``src_rect`` area from ``src`` image to this image at the coordinates given by ``dst``. ``src`` pixel is copied onto ``dst`` if the corresponding ``mask`` pixel's alpha value is not 0. ``src`` image and ``mask`` image **must** have the same size (width and height) but they can have different formats.

.. _class_Image_clear_mipmaps:

- void **clear_mipmaps** **(** **)**

Removes the image's mipmaps.

.. _class_Image_compress:

- :ref:`int<class_int>` **compress** **(** :ref:`int<class_int>` mode, :ref:`int<class_int>` source, :ref:`float<class_float>` lossy_quality **)**

Compresses the image to use less memory. Can not directly access pixel data while the image is compressed. Returns error if the chosen compression mode is not available. See ``COMPRESS\_\*`` constants.

.. _class_Image_convert:

- void **convert** **(** :ref:`int<class_int>` format **)**

Converts the image's format. See ``FORMAT\_\*`` constants.

.. _class_Image_copy_from:

- void **copy_from** **(** :ref:`Image<class_image>` src **)**

Copies ``src`` image to this image.

.. _class_Image_create:

- void **create** **(** :ref:`int<class_int>` width, :ref:`int<class_int>` height, :ref:`bool<class_bool>` use_mipmaps, :ref:`int<class_int>` format **)**

Creates an empty image of given size and format. See ``FORMAT\_\*`` constants. If ``use_mipmaps`` is true then generate mipmaps for this image. See the ``generate_mipmaps`` method.

.. _class_Image_create_from_data:

- void **create_from_data** **(** :ref:`int<class_int>` width, :ref:`int<class_int>` height, :ref:`bool<class_bool>` use_mipmaps, :ref:`int<class_int>` format, :ref:`PoolByteArray<class_poolbytearray>` data **)**

Creates a new image of given size and format. See ``FORMAT\_\*`` constants. Fills the image with the given raw data. If ``use_mipmaps`` is true then generate mipmaps for this image. See the ``generate_mipmaps`` method.

.. _class_Image_crop:

- void **crop** **(** :ref:`int<class_int>` width, :ref:`int<class_int>` height **)**

Crops the image to the given ``width`` and ``height``. If the specified size is larger than the current size, the extra area is filled with black pixels.

.. _class_Image_decompress:

- :ref:`int<class_int>` **decompress** **(** **)**

Decompresses the image if it is compressed. Returns an error if decompress function is not available.

.. _class_Image_detect_alpha:

- :ref:`int<class_int>` **detect_alpha** **(** **)** const

Returns ALPHA_BLEND if the image has data for alpha values. Returns ALPHA_BIT if all the alpha values are below a certain threshold or the maximum value. Returns ALPHA_NONE if no data for alpha values is found.

.. _class_Image_expand_x2_hq2x:

- void **expand_x2_hq2x** **(** **)**

Stretches the image and enlarges it by a factor of 2. No interpolation is done.

.. _class_Image_fill:

- void **fill** **(** :ref:`Color<class_color>` color **)**

Fills the image with a given :ref:`Color<class_color>`.

.. _class_Image_fix_alpha_edges:

- void **fix_alpha_edges** **(** **)**

Blends low-alpha pixels with nearby pixels.

.. _class_Image_flip_x:

- void **flip_x** **(** **)**

Flips the image horizontally.

.. _class_Image_flip_y:

- void **flip_y** **(** **)**

Flips the image vertically.

.. _class_Image_generate_mipmaps:

- :ref:`int<class_int>` **generate_mipmaps** **(** **)**

Generates mipmaps for the image. Mipmaps are pre-calculated and lower resolution copies of the image. Mipmaps are automatically used if the image needs to be scaled down when rendered. This improves image quality and the performance of the rendering. Returns an error if the image is compressed, in a custom format or if the image's width/height is 0.

.. _class_Image_get_data:

- :ref:`PoolByteArray<class_poolbytearray>` **get_data** **(** **)** const

Returns the image's raw data.

.. _class_Image_get_format:

- :ref:`int<class_int>` **get_format** **(** **)** const

Returns the image's raw data.

.. _class_Image_get_height:

- :ref:`int<class_int>` **get_height** **(** **)** const

Returns the image's height.

.. _class_Image_get_mipmap_offset:

- :ref:`int<class_int>` **get_mipmap_offset** **(** :ref:`int<class_int>` mipmap **)** const

Returns the offset where the image's mipmap with index ``mipmap`` is stored in the ``data`` dictionary.

.. _class_Image_get_pixel:

- :ref:`Color<class_color>` **get_pixel** **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)** const

Returns the color of the pixel at ``(x, y)`` if the image is locked. If the image is unlocked it always returns a :ref:`Color<class_color>` with the value ``(0, 0, 0, 1.0)``.

.. _class_Image_get_rect:

- :ref:`Image<class_image>` **get_rect** **(** :ref:`Rect2<class_rect2>` rect **)** const

Returns a new image that is a copy of the image's area specified with ``rect``.

.. _class_Image_get_size:

- :ref:`Vector2<class_vector2>` **get_size** **(** **)** const

Returns the image's size (width and height).

.. _class_Image_get_used_rect:

- :ref:`Rect2<class_rect2>` **get_used_rect** **(** **)** const

Returns a :ref:`Rect2<class_rect2>` enclosing the visible portion of the image.

.. _class_Image_get_width:

- :ref:`int<class_int>` **get_width** **(** **)** const

Returns the image's width.

.. _class_Image_has_mipmaps:

- :ref:`bool<class_bool>` **has_mipmaps** **(** **)** const

Returns ``true`` if the image has generated mipmaps.

.. _class_Image_is_compressed:

- :ref:`bool<class_bool>` **is_compressed** **(** **)** const

Returns ``true`` if the image is compressed.

.. _class_Image_is_empty:

- :ref:`bool<class_bool>` **is_empty** **(** **)** const

Returns ``true`` if the image has no data.

.. _class_Image_is_invisible:

- :ref:`bool<class_bool>` **is_invisible** **(** **)** const

Returns ``true`` if all the image's pixels have an alpha value of 0. Returns ``false`` if any pixel has an alpha value higher than 0.

.. _class_Image_load:

- :ref:`int<class_int>` **load** **(** :ref:`String<class_string>` path **)**

Loads an image from file ``path``.

.. _class_Image_lock:

- void **lock** **(** **)**

Locks the data and prevents changes.

.. _class_Image_normalmap_to_xy:

- void **normalmap_to_xy** **(** **)**

Converts the image's data to represent coordinates on a 3D plane. This is used when the image represents a normalmap. A normalmap can add lots of detail to a 3D surface without increasing the polygon count.

.. _class_Image_premultiply_alpha:

- void **premultiply_alpha** **(** **)**

Multiplies color values with alpha values. Resulting color values for a pixel are ``(color \* alpha)/256``.

.. _class_Image_resize:

- void **resize** **(** :ref:`int<class_int>` width, :ref:`int<class_int>` height, :ref:`int<class_int>` interpolation=1 **)**

Resizes the image to the given ``width`` and ``height``. New pixels are calculated using ``interpolation``. See ``interpolation`` constants.

.. _class_Image_resize_to_po2:

- void **resize_to_po2** **(** :ref:`bool<class_bool>` square=false **)**

Resizes the image to the nearest power of 2 for the width and height. If ``square`` is ``true`` then set width and height to be the same.

.. _class_Image_save_png:

- :ref:`int<class_int>` **save_png** **(** :ref:`String<class_string>` path **)** const

Saves the image as a PNG file to ``path``.

.. _class_Image_set_pixel:

- void **set_pixel** **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y, :ref:`Color<class_color>` color **)**

Sets the :ref:`Color<class_color>` of the pixel at ``(x, y)`` if the image is unlocked. Example:

``

var img = Image.new()

img.lock()

img.set_pixel(x, y, color) # Does not have an effect

img.unlock()

img.set_pixel(x, y, color) # Works

``.

.. _class_Image_shrink_x2:

- void **shrink_x2** **(** **)**

Shrinks the image by a factor of 2.

.. _class_Image_srgb_to_linear:

- void **srgb_to_linear** **(** **)**

Converts the raw data from the sRGB colorspace to a linear scale.

.. _class_Image_unlock:

- void **unlock** **(** **)**

Unlocks the data for writing access.


