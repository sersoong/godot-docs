.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the RigidBody2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_RigidBody2D:

RigidBody2D
===========

**Inherits:** :ref:`PhysicsBody2D<class_physicsbody2d>` **<** :ref:`CollisionObject2D<class_collisionobject2d>` **<** :ref:`Node2D<class_node2d>` **<** :ref:`CanvasItem<class_canvasitem>` **<** :ref:`Node<class_node>` **<** :ref:`Object<class_object>`

**Category:** Core

Brief Description
-----------------

A body that is controlled by the 2D physics engine.

Member Functions
----------------

+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`_integrate_forces<class_RigidBody2D__integrate_forces>` **(** :ref:`Physics2DDirectBodyState<class_physics2ddirectbodystate>` state **)** virtual                                                                  |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`add_force<class_RigidBody2D_add_force>` **(** :ref:`Vector2<class_vector2>` offset, :ref:`Vector2<class_vector2>` force **)**                                                                                      |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`apply_impulse<class_RigidBody2D_apply_impulse>` **(** :ref:`Vector2<class_vector2>` offset, :ref:`Vector2<class_vector2>` impulse **)**                                                                            |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`      | :ref:`get_angular_damp<class_RigidBody2D_get_angular_damp>` **(** **)** const                                                                                                                                            |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`      | :ref:`get_angular_velocity<class_RigidBody2D_get_angular_velocity>` **(** **)** const                                                                                                                                    |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_vector2>`  | :ref:`get_applied_force<class_RigidBody2D_get_applied_force>` **(** **)** const                                                                                                                                          |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`      | :ref:`get_applied_torque<class_RigidBody2D_get_applied_torque>` **(** **)** const                                                                                                                                        |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`      | :ref:`get_bounce<class_RigidBody2D_get_bounce>` **(** **)** const                                                                                                                                                        |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_array>`      | :ref:`get_colliding_bodies<class_RigidBody2D_get_colliding_bodies>` **(** **)** const                                                                                                                                    |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`          | :ref:`get_continuous_collision_detection_mode<class_RigidBody2D_get_continuous_collision_detection_mode>` **(** **)** const                                                                                              |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`      | :ref:`get_friction<class_RigidBody2D_get_friction>` **(** **)** const                                                                                                                                                    |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`      | :ref:`get_gravity_scale<class_RigidBody2D_get_gravity_scale>` **(** **)** const                                                                                                                                          |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`      | :ref:`get_inertia<class_RigidBody2D_get_inertia>` **(** **)** const                                                                                                                                                      |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`      | :ref:`get_linear_damp<class_RigidBody2D_get_linear_damp>` **(** **)** const                                                                                                                                              |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_vector2>`  | :ref:`get_linear_velocity<class_RigidBody2D_get_linear_velocity>` **(** **)** const                                                                                                                                      |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`      | :ref:`get_mass<class_RigidBody2D_get_mass>` **(** **)** const                                                                                                                                                            |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`          | :ref:`get_max_contacts_reported<class_RigidBody2D_get_max_contacts_reported>` **(** **)** const                                                                                                                          |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`          | :ref:`get_mode<class_RigidBody2D_get_mode>` **(** **)** const                                                                                                                                                            |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`      | :ref:`get_weight<class_RigidBody2D_get_weight>` **(** **)** const                                                                                                                                                        |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`        | :ref:`is_able_to_sleep<class_RigidBody2D_is_able_to_sleep>` **(** **)** const                                                                                                                                            |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`        | :ref:`is_contact_monitor_enabled<class_RigidBody2D_is_contact_monitor_enabled>` **(** **)** const                                                                                                                        |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`        | :ref:`is_sleeping<class_RigidBody2D_is_sleeping>` **(** **)** const                                                                                                                                                      |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`        | :ref:`is_using_custom_integrator<class_RigidBody2D_is_using_custom_integrator>` **(** **)**                                                                                                                              |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_angular_damp<class_RigidBody2D_set_angular_damp>` **(** :ref:`float<class_float>` angular_damp **)**                                                                                                           |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_angular_velocity<class_RigidBody2D_set_angular_velocity>` **(** :ref:`float<class_float>` angular_velocity **)**                                                                                               |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_applied_force<class_RigidBody2D_set_applied_force>` **(** :ref:`Vector2<class_vector2>` force **)**                                                                                                            |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_applied_torque<class_RigidBody2D_set_applied_torque>` **(** :ref:`float<class_float>` torque **)**                                                                                                             |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_axis_velocity<class_RigidBody2D_set_axis_velocity>` **(** :ref:`Vector2<class_vector2>` axis_velocity **)**                                                                                                    |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_bounce<class_RigidBody2D_set_bounce>` **(** :ref:`float<class_float>` bounce **)**                                                                                                                             |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_can_sleep<class_RigidBody2D_set_can_sleep>` **(** :ref:`bool<class_bool>` able_to_sleep **)**                                                                                                                  |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_contact_monitor<class_RigidBody2D_set_contact_monitor>` **(** :ref:`bool<class_bool>` enabled **)**                                                                                                            |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_continuous_collision_detection_mode<class_RigidBody2D_set_continuous_collision_detection_mode>` **(** :ref:`int<class_int>` mode **)**                                                                         |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_friction<class_RigidBody2D_set_friction>` **(** :ref:`float<class_float>` friction **)**                                                                                                                       |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_gravity_scale<class_RigidBody2D_set_gravity_scale>` **(** :ref:`float<class_float>` gravity_scale **)**                                                                                                        |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_inertia<class_RigidBody2D_set_inertia>` **(** :ref:`float<class_float>` inertia **)**                                                                                                                          |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_linear_damp<class_RigidBody2D_set_linear_damp>` **(** :ref:`float<class_float>` linear_damp **)**                                                                                                              |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_linear_velocity<class_RigidBody2D_set_linear_velocity>` **(** :ref:`Vector2<class_vector2>` linear_velocity **)**                                                                                              |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_mass<class_RigidBody2D_set_mass>` **(** :ref:`float<class_float>` mass **)**                                                                                                                                   |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_max_contacts_reported<class_RigidBody2D_set_max_contacts_reported>` **(** :ref:`int<class_int>` amount **)**                                                                                                   |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_mode<class_RigidBody2D_set_mode>` **(** :ref:`int<class_int>` mode **)**                                                                                                                                       |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_sleeping<class_RigidBody2D_set_sleeping>` **(** :ref:`bool<class_bool>` sleeping **)**                                                                                                                         |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_use_custom_integrator<class_RigidBody2D_set_use_custom_integrator>` **(** :ref:`bool<class_bool>` enable **)**                                                                                                 |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_weight<class_RigidBody2D_set_weight>` **(** :ref:`float<class_float>` weight **)**                                                                                                                             |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`        | :ref:`test_motion<class_RigidBody2D_test_motion>` **(** :ref:`Vector2<class_vector2>` motion, :ref:`float<class_float>` margin=0.08, :ref:`Physics2DTestMotionResult<class_physics2dtestmotionresult>` result=null **)** |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Signals
-------

.. _class_RigidBody2D_body_entered:

- **body_entered** **(** :ref:`Object<class_object>` body **)**

Emitted when a body enters into contact with this one. :ref:`contact_monitor<class_RigidBody2D_contact_monitor>` must be ``true`` and :ref:`contacts_reported<class_RigidBody2D_contacts_reported>` greater than ``0``.

.. _class_RigidBody2D_body_exited:

- **body_exited** **(** :ref:`Object<class_object>` body **)**

Emitted when a body exits contact with this one. :ref:`contact_monitor<class_RigidBody2D_contact_monitor>` must be ``true`` and :ref:`contacts_reported<class_RigidBody2D_contacts_reported>` greater than ``0``.

.. _class_RigidBody2D_body_shape_entered:

- **body_shape_entered** **(** :ref:`int<class_int>` body_id, :ref:`Object<class_object>` body, :ref:`int<class_int>` body_shape, :ref:`int<class_int>` local_shape **)**

Emitted when a body enters into contact with this one. Reports colliding shape information. See :ref:`CollisionObject2D<class_collisionobject2d>` for shape index information. :ref:`contact_monitor<class_RigidBody2D_contact_monitor>` must be ``true`` and :ref:`contacts_reported<class_RigidBody2D_contacts_reported>` greater than ``0``.

.. _class_RigidBody2D_body_shape_exited:

- **body_shape_exited** **(** :ref:`int<class_int>` body_id, :ref:`Object<class_object>` body, :ref:`int<class_int>` body_shape, :ref:`int<class_int>` local_shape **)**

Emitted when a body shape exits contact with this one. Reports colliding shape information. See :ref:`CollisionObject2D<class_collisionobject2d>` for shape index information. :ref:`contact_monitor<class_RigidBody2D_contact_monitor>` must be ``true`` and :ref:`contacts_reported<class_RigidBody2D_contacts_reported>` greater than ``0``.

.. _class_RigidBody2D_sleeping_state_changed:

- **sleeping_state_changed** **(** **)**

Emitted when :ref:`sleeping<class_RigidBody2D_sleeping>` changes.


Member Variables
----------------

  .. _class_RigidBody2D_angular_damp:

- :ref:`float<class_float>` **angular_damp** - Damps the body's :ref:`angular_velocity<class_RigidBody2D_angular_velocity>`. If ``-1`` the body will use the "Default Angular Damp" in "Project > Project Settings > Physics > 2d". Default value: ``-1``.

  .. _class_RigidBody2D_angular_velocity:

- :ref:`float<class_float>` **angular_velocity** - The body's rotational velocity.

  .. _class_RigidBody2D_bounce:

- :ref:`float<class_float>` **bounce** - The body's bounciness. Default value: ``0``.

  .. _class_RigidBody2D_can_sleep:

- :ref:`bool<class_bool>` **can_sleep** - If ``true`` the body will not calculate forces and will act as a static body if there is no movement. The body will wake up when other forces are applied via collisions or by using :ref:`apply_impulse<class_RigidBody2D_apply_impulse>` or :ref:`add_force<class_RigidBody2D_add_force>`. Default value: ``true``.

  .. _class_RigidBody2D_contact_monitor:

- :ref:`bool<class_bool>` **contact_monitor** - If ``true`` the body will emit signals when it collides with another RigidBody2D. See also :ref:`contacts_reported<class_RigidBody2D_contacts_reported>`. Default value: ``false``.

  .. _class_RigidBody2D_contacts_reported:

- :ref:`int<class_int>` **contacts_reported** - The maximum number of contacts to report. Default value: ``0``.

  .. _class_RigidBody2D_continuous_cd:

- :ref:`int<class_int>` **continuous_cd** - Continuous collision detection mode. Default value: ``CCD_MODE_DISABLED``.

Continuous collision detection tries to predict where a moving body will collide instead of moving it and correcting its movement after collision. Continuous collision detection is slower, but more precise and misses fewer collisions with small, fast-moving objects. Raycasting and shapecasting methods are available. See ``CCD_MODE\_`` constants for details.

  .. _class_RigidBody2D_custom_integrator:

- :ref:`bool<class_bool>` **custom_integrator** - If ``true`` internal force integration is disabled for this body. Aside from collision response, the body will only move as determined by the :ref:`_integrate_forces<class_RigidBody2D__integrate_forces>` function.

  .. _class_RigidBody2D_friction:

- :ref:`float<class_float>` **friction** - The body's friction. Values range from ``0`` (frictionless) to ``1`` (maximum friction). Default value: ``1``.

  .. _class_RigidBody2D_gravity_scale:

- :ref:`float<class_float>` **gravity_scale** - Multiplies the gravity applied to the body. The body's gravity is calculated from the "Default Gravity" value in "Project > Project Settings > Physics > 2d" and/or any additional gravity vector applied by :ref:`Area2D<class_area2d>`\ s. Default value: ``1``.

  .. _class_RigidBody2D_linear_damp:

- :ref:`float<class_float>` **linear_damp** - Damps the body's :ref:`linear_velocity<class_RigidBody2D_linear_velocity>`. If ``-1`` the body will use the "Default Linear Damp" in "Project > Project Settings > Physics > 2d". Default value: ``-1``.

  .. _class_RigidBody2D_linear_velocity:

- :ref:`Vector2<class_vector2>` **linear_velocity** - The body's linear velocity.

  .. _class_RigidBody2D_mass:

- :ref:`float<class_float>` **mass** - The body's mass. Default value: ``1``.

  .. _class_RigidBody2D_mode:

- :ref:`int<class_int>` **mode** - The body's mode. See ``MODE\_\*`` constants. Default value: ``MODE_RIGID``.

  .. _class_RigidBody2D_sleeping:

- :ref:`bool<class_bool>` **sleeping** - If ``true`` the body is sleeping and will not calculate forces until woken up by a collision or by using :ref:`apply_impulse<class_RigidBody2D_apply_impulse>` or :ref:`add_force<class_RigidBody2D_add_force>`.

  .. _class_RigidBody2D_weight:

- :ref:`float<class_float>` **weight** - The body's weight based on its mass and the "Default Gravity" value in "Project > Project Settings > Physics > 2d".


Numeric Constants
-----------------

- **MODE_RIGID** = **0** --- Rigid mode. The body behaves as a physical object. It collides with other bodies and responds to forces applied to it. This is the default mode.
- **MODE_STATIC** = **1** --- Static mode. The body behaves like a :ref:`StaticBody2D<class_staticbody2d>` and does not move.
- **MODE_CHARACTER** = **2** --- Character mode. Similar to ``MODE_RIGID``, but the body can not rotate.
- **MODE_KINEMATIC** = **3** --- Kinematic mode. The body behaves like a :ref:`KinematicBody2D<class_kinematicbody2d>`, and must be moved by code.
- **CCD_MODE_DISABLED** = **0** --- Continuous collision detection disabled. This is the fastest way to detect body collisions, but can miss small, fast-moving objects.
- **CCD_MODE_CAST_RAY** = **1** --- Continuous collision detection enabled using raycasting. This is faster than shapecasting but less precise.
- **CCD_MODE_CAST_SHAPE** = **2** --- Continuous collision detection enabled using shapecasting. This is the slowest CCD method and the most precise.

Description
-----------

This node implements simulated 2D physics. You do not control a RigidBody2D directly. Instead you apply forces to it (gravity, impulses, etc.) and the physics simulation calculates the resulting movement based on its mass, friction, and other physical properties.

A RigidBody2D has 4 behavior modes (see :ref:`mode<class_RigidBody2D_mode>`):

- **Rigid**: The body behaves as a physical object. It collides with other bodies and responds to forces applied to it. This is the default mode.

- **Static**: The body behaves like a :ref:`StaticBody2D<class_staticbody2d>` and does not move.

- **Character**: Similar to ``Rigid`` mode, but the body can not rotate.

- **Kinematic**: The body behaves like a :ref:`KinematicBody2D<class_kinematicbody2d>`, and must be moved by code.

**Note:** You should not change a RigidBody2D's ``position`` or ``linear_velocity`` every frame or even very often. If you need to directly affect the body's state, use :ref:`_integrate_forces<class_RigidBody2D__integrate_forces>`, which allows you to directly access the physics state.

If you need to override the default physics behavior, you can write a custom force integration. See :ref:`custom_integrator<class_RigidBody2D_custom_integrator>`.

Member Function Description
---------------------------

.. _class_RigidBody2D__integrate_forces:

- void **_integrate_forces** **(** :ref:`Physics2DDirectBodyState<class_physics2ddirectbodystate>` state **)** virtual

Allows you to read and safely modify the simulation state for the object. Use this instead of Node._physics_process if you need to directly change the body's ``position`` or other physics properties. By default it works in addition to the usual physics behavior, but :ref:`custom_integrator<class_RigidBody2D_custom_integrator>` allows you to disable the default behavior and write custom force integration for a body.

.. _class_RigidBody2D_add_force:

- void **add_force** **(** :ref:`Vector2<class_vector2>` offset, :ref:`Vector2<class_vector2>` force **)**

Adds a positioned force to the body. Both the force and the offset from the body origin are in global coordinates.

.. _class_RigidBody2D_apply_impulse:

- void **apply_impulse** **(** :ref:`Vector2<class_vector2>` offset, :ref:`Vector2<class_vector2>` impulse **)**

Applies a positioned impulse to the body (which will be affected by the body mass and shape). This is the equivalent of hitting a billiard ball with a cue: a force that is applied instantaneously. Both the impulse and the offset from the body origin are in global coordinates.

.. _class_RigidBody2D_get_angular_damp:

- :ref:`float<class_float>` **get_angular_damp** **(** **)** const

Return the angular damp for this body.

.. _class_RigidBody2D_get_angular_velocity:

- :ref:`float<class_float>` **get_angular_velocity** **(** **)** const

Return the body angular velocity. This changes by physics granularity. See :ref:`set_angular_velocity<class_RigidBody2D_set_angular_velocity>`.

.. _class_RigidBody2D_get_applied_force:

- :ref:`Vector2<class_vector2>` **get_applied_force** **(** **)** const

Returns the body's total applied force.

.. _class_RigidBody2D_get_applied_torque:

- :ref:`float<class_float>` **get_applied_torque** **(** **)** const

Returns the body's total applied torque.

.. _class_RigidBody2D_get_bounce:

- :ref:`float<class_float>` **get_bounce** **(** **)** const

Return the body bounciness.

.. _class_RigidBody2D_get_colliding_bodies:

- :ref:`Array<class_array>` **get_colliding_bodies** **(** **)** const

Returns a list of the bodies colliding with this one. Use :ref:`contacts_reported<class_RigidBody2D_contacts_reported>` to set the maximum number reported. You must also set :ref:`contact_monitor<class_RigidBody2D_contact_monitor>` to ``true``.

.. _class_RigidBody2D_get_continuous_collision_detection_mode:

- :ref:`int<class_int>` **get_continuous_collision_detection_mode** **(** **)** const

Return whether this body is using continuous collision detection.

.. _class_RigidBody2D_get_friction:

- :ref:`float<class_float>` **get_friction** **(** **)** const

Return the body friction.

.. _class_RigidBody2D_get_gravity_scale:

- :ref:`float<class_float>` **get_gravity_scale** **(** **)** const

Return the gravity factor.

.. _class_RigidBody2D_get_inertia:

- :ref:`float<class_float>` **get_inertia** **(** **)** const

Returns the body's moment of inertia, which is computed automatically from the body's mass and assigned :ref:`Shape2D<class_shape2d>`\ s during the physics frame. Note that it will not yet have a value in the ``_ready()`` function.

.. _class_RigidBody2D_get_linear_damp:

- :ref:`float<class_float>` **get_linear_damp** **(** **)** const

Return the linear damp for this body.

.. _class_RigidBody2D_get_linear_velocity:

- :ref:`Vector2<class_vector2>` **get_linear_velocity** **(** **)** const

Returns the body's linear velocity. This changes when a physics frame has passed, not during a normal update. See :ref:`set_linear_velocity<class_RigidBody2D_set_linear_velocity>`.

.. _class_RigidBody2D_get_mass:

- :ref:`float<class_float>` **get_mass** **(** **)** const

Return the body mass.

.. _class_RigidBody2D_get_max_contacts_reported:

- :ref:`int<class_int>` **get_max_contacts_reported** **(** **)** const

Return the maximum contacts that can be reported. See :ref:`set_max_contacts_reported<class_RigidBody2D_set_max_contacts_reported>`.

.. _class_RigidBody2D_get_mode:

- :ref:`int<class_int>` **get_mode** **(** **)** const

Return the current body mode, see :ref:`set_mode<class_RigidBody2D_set_mode>`.

.. _class_RigidBody2D_get_weight:

- :ref:`float<class_float>` **get_weight** **(** **)** const

Return the body weight given standard earth-weight (gravity 9.8).

.. _class_RigidBody2D_is_able_to_sleep:

- :ref:`bool<class_bool>` **is_able_to_sleep** **(** **)** const

Return true if the body has the ability to fall asleep when not moving. See :ref:`set_can_sleep<class_RigidBody2D_set_can_sleep>`.

.. _class_RigidBody2D_is_contact_monitor_enabled:

- :ref:`bool<class_bool>` **is_contact_monitor_enabled** **(** **)** const

Return whether contact monitoring is enabled.

.. _class_RigidBody2D_is_sleeping:

- :ref:`bool<class_bool>` **is_sleeping** **(** **)** const

Return whether the body is sleeping.

.. _class_RigidBody2D_is_using_custom_integrator:

- :ref:`bool<class_bool>` **is_using_custom_integrator** **(** **)**

Return true if the body is not doing any built-in force integration.

.. _class_RigidBody2D_set_angular_damp:

- void **set_angular_damp** **(** :ref:`float<class_float>` angular_damp **)**

Set the angular damp for this body. If this value is different from -1, any angular damp derived from the world or areas will be overridden.

.. _class_RigidBody2D_set_angular_velocity:

- void **set_angular_velocity** **(** :ref:`float<class_float>` angular_velocity **)**

Set the body angular velocity. Can be used sporadically, but **DON'T SET THIS IN EVERY FRAME**, because physics may be running in another thread and definitely runs at a different granularity. Use :ref:`_integrate_forces<class_RigidBody2D__integrate_forces>` as your process loop if you want to have precise control of the body state.

.. _class_RigidBody2D_set_applied_force:

- void **set_applied_force** **(** :ref:`Vector2<class_vector2>` force **)**

Sets the applied force vector. This is the equivalent of firing a rocket: the force is applied constantly.

.. _class_RigidBody2D_set_applied_torque:

- void **set_applied_torque** **(** :ref:`float<class_float>` torque **)**

Sets the applied torque.

.. _class_RigidBody2D_set_axis_velocity:

- void **set_axis_velocity** **(** :ref:`Vector2<class_vector2>` axis_velocity **)**

Sets the body's velocity on the given axis. The velocity in the given vector axis will be set as the given vector length. This is useful for jumping behavior.

.. _class_RigidBody2D_set_bounce:

- void **set_bounce** **(** :ref:`float<class_float>` bounce **)**

Set the body bounciness, from 0 (no bounce) to 1 (full bounce).

.. _class_RigidBody2D_set_can_sleep:

- void **set_can_sleep** **(** :ref:`bool<class_bool>` able_to_sleep **)**

Set the body ability to fall asleep when not moving. This saves an enormous amount of processor time when there are plenty of rigid bodies (non static) in a scene.

Sleeping bodies are not affected by forces until a collision or an :ref:`apply_impulse<class_RigidBody2D_apply_impulse>` / :ref:`set_applied_force<class_RigidBody2D_set_applied_force>` wakes them up. Until then, they behave like a static body.

.. _class_RigidBody2D_set_contact_monitor:

- void **set_contact_monitor** **(** :ref:`bool<class_bool>` enabled **)**

Enable contact monitoring. This allows the body to emit signals when it collides with another.

.. _class_RigidBody2D_set_continuous_collision_detection_mode:

- void **set_continuous_collision_detection_mode** **(** :ref:`int<class_int>` mode **)**

Set the continuous collision detection mode from the enum CCD_MODE\_\*.

Continuous collision detection tries to predict where a moving body will collide, instead of moving it and correcting its movement if it collided. The first is more precise, and misses less impacts by small, fast-moving objects. The second is faster to compute, but can miss small, fast-moving objects.

.. _class_RigidBody2D_set_friction:

- void **set_friction** **(** :ref:`float<class_float>` friction **)**

Set the body friction, from 0 (frictionless) to 1 (full friction).

.. _class_RigidBody2D_set_gravity_scale:

- void **set_gravity_scale** **(** :ref:`float<class_float>` gravity_scale **)**

Set the gravity factor. This factor multiplies gravity intensity just for this body.

.. _class_RigidBody2D_set_inertia:

- void **set_inertia** **(** :ref:`float<class_float>` inertia **)**

Set the body's moment of inertia. This is like mass, but for rotation: it determines how much torque it takes to rotate the body. The moment of inertia is usually computed automatically from the mass and the shapes, but this function allows you to set a custom value. Set 0 (or negative) inertia to return to automatically computing it.

.. _class_RigidBody2D_set_linear_damp:

- void **set_linear_damp** **(** :ref:`float<class_float>` linear_damp **)**

Set the linear damp for this body. If this value is different from -1, any linear damp derived from the world or areas will be overridden.

.. _class_RigidBody2D_set_linear_velocity:

- void **set_linear_velocity** **(** :ref:`Vector2<class_vector2>` linear_velocity **)**

Set the body linear velocity. Can be used sporadically, but **DON'T SET THIS IN EVERY FRAME**, because physics may be running in another thread and definitely runs at a different granularity. Use :ref:`_integrate_forces<class_RigidBody2D__integrate_forces>` as your process loop if you want to have precise control of the body state.

.. _class_RigidBody2D_set_mass:

- void **set_mass** **(** :ref:`float<class_float>` mass **)**

Set the body mass.

.. _class_RigidBody2D_set_max_contacts_reported:

- void **set_max_contacts_reported** **(** :ref:`int<class_int>` amount **)**

Set the maximum contacts to report. Bodies can keep a log of the contacts with other bodies, this is enabled by setting the maximum amount of contacts reported to a number greater than 0.

.. _class_RigidBody2D_set_mode:

- void **set_mode** **(** :ref:`int<class_int>` mode **)**

Set the body mode, from the MODE\_\* enum. This allows to change to a static body or a character body.

.. _class_RigidBody2D_set_sleeping:

- void **set_sleeping** **(** :ref:`bool<class_bool>` sleeping **)**

Set whether a body is sleeping or not. Sleeping bodies are not affected by forces until a collision or an :ref:`apply_impulse<class_RigidBody2D_apply_impulse>` / :ref:`set_applied_force<class_RigidBody2D_set_applied_force>` wakes them up. Until then, they behave like a static body.

.. _class_RigidBody2D_set_use_custom_integrator:

- void **set_use_custom_integrator** **(** :ref:`bool<class_bool>` enable **)**

Pass true to disable the internal force integration (like gravity or air friction) for this body. Other than collision response, the body will only move as determined by the :ref:`_integrate_forces<class_RigidBody2D__integrate_forces>` function, if defined.

.. _class_RigidBody2D_set_weight:

- void **set_weight** **(** :ref:`float<class_float>` weight **)**

Set the body weight given standard earth-weight (gravity 9.8). Not really useful for 2D since most measures for this node are in pixels.

.. _class_RigidBody2D_test_motion:

- :ref:`bool<class_bool>` **test_motion** **(** :ref:`Vector2<class_vector2>` motion, :ref:`float<class_float>` margin=0.08, :ref:`Physics2DTestMotionResult<class_physics2dtestmotionresult>` result=null **)**

Returns ``true`` if a collision would result from moving in the given vector. ``margin`` increases the size of the shapes involved in the collision detection, and ``result`` is an object of type :ref:`Physics2DTestMotionResult<class_physics2dtestmotionresult>`, which contains additional information about the collision (should there be one).


