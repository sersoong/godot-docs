.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Joint.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Joint:

Joint
=====

**Inherits:** :ref:`Spatial<class_spatial>` **<** :ref:`Node<class_node>` **<** :ref:`Object<class_object>`

**Inherited By:** :ref:`ConeTwistJoint<class_conetwistjoint>`, :ref:`Generic6DOFJoint<class_generic6dofjoint>`, :ref:`SliderJoint<class_sliderjoint>`, :ref:`HingeJoint<class_hingejoint>`, :ref:`PinJoint<class_pinjoint>`

**Category:** Core

Brief Description
-----------------

Base class for all 3D joints

Member Functions
----------------

+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`          | :ref:`get_exclude_nodes_from_collision<class_Joint_get_exclude_nodes_from_collision>` **(** **)** const                          |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------+
| :ref:`NodePath<class_nodepath>`  | :ref:`get_node_a<class_Joint_get_node_a>` **(** **)** const                                                                      |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------+
| :ref:`NodePath<class_nodepath>`  | :ref:`get_node_b<class_Joint_get_node_b>` **(** **)** const                                                                      |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`            | :ref:`get_solver_priority<class_Joint_get_solver_priority>` **(** **)** const                                                    |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------+
| void                             | :ref:`set_exclude_nodes_from_collision<class_Joint_set_exclude_nodes_from_collision>` **(** :ref:`bool<class_bool>` enable **)** |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------+
| void                             | :ref:`set_node_a<class_Joint_set_node_a>` **(** :ref:`NodePath<class_nodepath>` node **)**                                       |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------+
| void                             | :ref:`set_node_b<class_Joint_set_node_b>` **(** :ref:`NodePath<class_nodepath>` node **)**                                       |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------+
| void                             | :ref:`set_solver_priority<class_Joint_set_solver_priority>` **(** :ref:`int<class_int>` priority **)**                           |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------+

Member Variables
----------------

  .. _class_Joint_collision/exclude_nodes:

- :ref:`bool<class_bool>` **collision/exclude_nodes** - If ``true`` the two bodies of the nodes are not able to collide with each other.

  .. _class_Joint_nodes/node_a:

- :ref:`NodePath<class_nodepath>` **nodes/node_a** - The :ref:`Node<class_node>`, the first side of the Joint attaches to.

  .. _class_Joint_nodes/node_b:

- :ref:`NodePath<class_nodepath>` **nodes/node_b** - The :ref:`Node<class_node>`, the second side of the Joint attaches to.

  .. _class_Joint_solver/priority:

- :ref:`int<class_int>` **solver/priority** - The order in wich the solver is executed compared to the other Joints, the lower, the earlier.


Description
-----------

All 3D joints link two nodes, has a priority, and can decide if the two bodies of the nodes should be able to collide with each other

Member Function Description
---------------------------

.. _class_Joint_get_exclude_nodes_from_collision:

- :ref:`bool<class_bool>` **get_exclude_nodes_from_collision** **(** **)** const

.. _class_Joint_get_node_a:

- :ref:`NodePath<class_nodepath>` **get_node_a** **(** **)** const

.. _class_Joint_get_node_b:

- :ref:`NodePath<class_nodepath>` **get_node_b** **(** **)** const

.. _class_Joint_get_solver_priority:

- :ref:`int<class_int>` **get_solver_priority** **(** **)** const

.. _class_Joint_set_exclude_nodes_from_collision:

- void **set_exclude_nodes_from_collision** **(** :ref:`bool<class_bool>` enable **)**

.. _class_Joint_set_node_a:

- void **set_node_a** **(** :ref:`NodePath<class_nodepath>` node **)**

.. _class_Joint_set_node_b:

- void **set_node_b** **(** :ref:`NodePath<class_nodepath>` node **)**

.. _class_Joint_set_solver_priority:

- void **set_solver_priority** **(** :ref:`int<class_int>` priority **)**


