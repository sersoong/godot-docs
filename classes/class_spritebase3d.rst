.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the SpriteBase3D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_SpriteBase3D:

SpriteBase3D
============

**Inherits:** :ref:`GeometryInstance<class_geometryinstance>` **<** :ref:`VisualInstance<class_visualinstance>` **<** :ref:`Spatial<class_spatial>` **<** :ref:`Node<class_node>` **<** :ref:`Object<class_object>`

**Inherited By:** :ref:`AnimatedSprite3D<class_animatedsprite3d>`, :ref:`Sprite3D<class_sprite3d>`

**Category:** Core

Brief Description
-----------------

2D Sprite node in 3D environment.

Member Functions
----------------

+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`          | :ref:`get_alpha_cut_mode<class_SpriteBase3D_get_alpha_cut_mode>` **(** **)** const                                             |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`          | :ref:`get_axis<class_SpriteBase3D_get_axis>` **(** **)** const                                                                 |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`        | :ref:`get_draw_flag<class_SpriteBase3D_get_draw_flag>` **(** :ref:`int<class_int>` flag **)** const                            |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_rect2>`      | :ref:`get_item_rect<class_SpriteBase3D_get_item_rect>` **(** **)** const                                                       |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Color<class_color>`      | :ref:`get_modulate<class_SpriteBase3D_get_modulate>` **(** **)** const                                                         |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_vector2>`  | :ref:`get_offset<class_SpriteBase3D_get_offset>` **(** **)** const                                                             |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`      | :ref:`get_opacity<class_SpriteBase3D_get_opacity>` **(** **)** const                                                           |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`      | :ref:`get_pixel_size<class_SpriteBase3D_get_pixel_size>` **(** **)** const                                                     |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`        | :ref:`is_centered<class_SpriteBase3D_is_centered>` **(** **)** const                                                           |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`        | :ref:`is_flipped_h<class_SpriteBase3D_is_flipped_h>` **(** **)** const                                                         |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`        | :ref:`is_flipped_v<class_SpriteBase3D_is_flipped_v>` **(** **)** const                                                         |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_alpha_cut_mode<class_SpriteBase3D_set_alpha_cut_mode>` **(** :ref:`int<class_int>` mode **)**                        |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_axis<class_SpriteBase3D_set_axis>` **(** :ref:`int<class_int>` axis **)**                                            |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_centered<class_SpriteBase3D_set_centered>` **(** :ref:`bool<class_bool>` centered **)**                              |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_draw_flag<class_SpriteBase3D_set_draw_flag>` **(** :ref:`int<class_int>` flag, :ref:`bool<class_bool>` enabled **)** |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_flip_h<class_SpriteBase3D_set_flip_h>` **(** :ref:`bool<class_bool>` flip_h **)**                                    |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_flip_v<class_SpriteBase3D_set_flip_v>` **(** :ref:`bool<class_bool>` flip_v **)**                                    |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_modulate<class_SpriteBase3D_set_modulate>` **(** :ref:`Color<class_color>` modulate **)**                            |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_offset<class_SpriteBase3D_set_offset>` **(** :ref:`Vector2<class_vector2>` offset **)**                              |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_opacity<class_SpriteBase3D_set_opacity>` **(** :ref:`float<class_float>` opacity **)**                               |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_pixel_size<class_SpriteBase3D_set_pixel_size>` **(** :ref:`float<class_float>` pixel_size **)**                      |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------+

Member Variables
----------------

  .. _class_SpriteBase3D_alpha_cut:

- :ref:`int<class_int>` **alpha_cut**

  .. _class_SpriteBase3D_axis:

- :ref:`int<class_int>` **axis** - The direction in which the front of the texture faces.

  .. _class_SpriteBase3D_centered:

- :ref:`bool<class_bool>` **centered** - If ``true`` texture will be centered. Default value: ``true``.

  .. _class_SpriteBase3D_double_sided:

- :ref:`bool<class_bool>` **double_sided** - If ``true`` texture can be seen from the back as well, if ``false``, it is invisible when looking at it from behind. Default value: ``true``.

  .. _class_SpriteBase3D_flip_h:

- :ref:`bool<class_bool>` **flip_h** - If ``true`` texture is flipped horizontally. Default value: ``false``.

  .. _class_SpriteBase3D_flip_v:

- :ref:`bool<class_bool>` **flip_v** - If ``true`` texture is flipped vertically. Default value: ``false``.

  .. _class_SpriteBase3D_modulate:

- :ref:`Color<class_color>` **modulate** - A color value that gets multiplied on, could be used for mood-coloring or to simulate the color of light.

  .. _class_SpriteBase3D_offset:

- :ref:`Vector2<class_vector2>` **offset** - The texture's drawing offset.

  .. _class_SpriteBase3D_opacity:

- :ref:`float<class_float>` **opacity** - The objects visibility on a scale from ``0`` fully invisible to ``1`` fully visible.

  .. _class_SpriteBase3D_pixel_size:

- :ref:`float<class_float>` **pixel_size** - The size of one pixel's width on the Sprite to scale it in 3D.

  .. _class_SpriteBase3D_shaded:

- :ref:`bool<class_bool>` **shaded** - If ``true`` the :ref:`Light<class_light>` in the :ref:`Environment<class_environment>` has effects on the Sprite. Default value: ``false``.

  .. _class_SpriteBase3D_transparent:

- :ref:`bool<class_bool>` **transparent** - If ``true`` the texture's transparency and the opacity are used to make those parts of the Sprite invisible. Default value: ``true``.


Numeric Constants
-----------------

- **FLAG_TRANSPARENT** = **0** --- If set, the texture's transparency and the opacity are used to make those parts of the Sprite invisible.
- **FLAG_SHADED** = **1** --- If set, the Light in the Environment has effects on the Sprite.
- **FLAG_DOUBLE_SIDED** = **2** --- If set, texture can be seen from the back as well, if not, it is invisible when looking at it from behind.
- **FLAG_MAX** = **3** --- Used internally to mark the end of the Flags section.
- **ALPHA_CUT_DISABLED** = **0**
- **ALPHA_CUT_DISCARD** = **1**
- **ALPHA_CUT_OPAQUE_PREPASS** = **2**

Description
-----------

A node that displays 2D texture information in a 3D environment.

Member Function Description
---------------------------

.. _class_SpriteBase3D_get_alpha_cut_mode:

- :ref:`int<class_int>` **get_alpha_cut_mode** **(** **)** const

.. _class_SpriteBase3D_get_axis:

- :ref:`int<class_int>` **get_axis** **(** **)** const

.. _class_SpriteBase3D_get_draw_flag:

- :ref:`bool<class_bool>` **get_draw_flag** **(** :ref:`int<class_int>` flag **)** const

.. _class_SpriteBase3D_get_item_rect:

- :ref:`Rect2<class_rect2>` **get_item_rect** **(** **)** const

.. _class_SpriteBase3D_get_modulate:

- :ref:`Color<class_color>` **get_modulate** **(** **)** const

.. _class_SpriteBase3D_get_offset:

- :ref:`Vector2<class_vector2>` **get_offset** **(** **)** const

.. _class_SpriteBase3D_get_opacity:

- :ref:`float<class_float>` **get_opacity** **(** **)** const

.. _class_SpriteBase3D_get_pixel_size:

- :ref:`float<class_float>` **get_pixel_size** **(** **)** const

.. _class_SpriteBase3D_is_centered:

- :ref:`bool<class_bool>` **is_centered** **(** **)** const

.. _class_SpriteBase3D_is_flipped_h:

- :ref:`bool<class_bool>` **is_flipped_h** **(** **)** const

.. _class_SpriteBase3D_is_flipped_v:

- :ref:`bool<class_bool>` **is_flipped_v** **(** **)** const

.. _class_SpriteBase3D_set_alpha_cut_mode:

- void **set_alpha_cut_mode** **(** :ref:`int<class_int>` mode **)**

.. _class_SpriteBase3D_set_axis:

- void **set_axis** **(** :ref:`int<class_int>` axis **)**

.. _class_SpriteBase3D_set_centered:

- void **set_centered** **(** :ref:`bool<class_bool>` centered **)**

.. _class_SpriteBase3D_set_draw_flag:

- void **set_draw_flag** **(** :ref:`int<class_int>` flag, :ref:`bool<class_bool>` enabled **)**

.. _class_SpriteBase3D_set_flip_h:

- void **set_flip_h** **(** :ref:`bool<class_bool>` flip_h **)**

.. _class_SpriteBase3D_set_flip_v:

- void **set_flip_v** **(** :ref:`bool<class_bool>` flip_v **)**

.. _class_SpriteBase3D_set_modulate:

- void **set_modulate** **(** :ref:`Color<class_color>` modulate **)**

.. _class_SpriteBase3D_set_offset:

- void **set_offset** **(** :ref:`Vector2<class_vector2>` offset **)**

.. _class_SpriteBase3D_set_opacity:

- void **set_opacity** **(** :ref:`float<class_float>` opacity **)**

.. _class_SpriteBase3D_set_pixel_size:

- void **set_pixel_size** **(** :ref:`float<class_float>` pixel_size **)**


